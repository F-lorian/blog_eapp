<?php

namespace FlorianMasip\BlogBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * PostRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PostRepository extends EntityRepository {

    /**
     * Récupère la pagination des post avec un max par page
     *
     * @param \FlorianMasip\BlogBundle\Entity\Blog $blog
     * @param int $page
     * @param int $postsPerPage
     * @param \FlorianMasip\BlogBundle\Entity\Category $category
     * @return Paginator
     */
    public function getPostsList($blog, $page = 0, $postsPerPage = 5, $category = null) {
        if ($category != null) {
            $q = $this->_em->createQueryBuilder()
                    ->select('post')
                    ->from('BlogBundle:Post', 'post')
                    ->where('post.category = :category AND post.blog = :blog')
                    ->setParameter("category", $category)
                    ->setParameter("blog", $blog)
                    ->orderBy('post.dateCreation', 'DESC');
        } else {
            $q = $this->_em->createQueryBuilder()
                    ->select('post')
                    ->from('BlogBundle:Post', 'post')
                    ->where('post.blog = :blog')->setParameter("blog", $blog)
                    ->orderBy('post.dateCreation', 'DESC');
        }

        $q->setFirstResult($page * $postsPerPage)->setMaxResults($postsPerPage);

        return new Paginator($q);
    }

}
